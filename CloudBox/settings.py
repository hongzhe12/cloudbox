"""
Django settings for CloudBox project.

Generated by 'django-admin startproject' using Django 4.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%-$rmnfy++df$-+1^=uel(v8nkhntxmcj9v+063!-y=9r6&(r-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django_celery_results',  # celery结果
    'django_celery_beat',  # celery定时任务
    # 'corsheaders',
    'drf_yasg',
    'rest_framework',
    'cloud.apps.CloudConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'CloudBox.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'APP_DIRS': True,
        'DIRS': [BASE_DIR / 'templates'],
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'CloudBox.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'cloudbox',
        'USER': 'cloudbox',
        'PASSWORD': 'password',
        'HOST': 'db',  # Docker Compose 中 Postgres 服务的名称
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

# 设置中文
LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# STATICFILES_DIRS 不应该包含 STATIC_ROOT
STATICFILES_DIRS = [
    BASE_DIR / "static",  # 这是你存放自定义静态文件的目录
]

# STATIC_ROOT 应该是 collectstatic 收集静态文件的目录
STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# settings.py
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://cloudbox-redis:6379/1',  # 使用服务名称代替 127.0.0.1
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        },
    }
}




# 允许所有来源的跨域请求
CORS_ALLOW_ALL_ORIGINS = True  # 允许所有来源

# 或者，指定允许的来源
# CORS_ALLOWED_ORIGINS = [
#     'http://localhost:5173',  # 允许来自该地址的请求
# ]


# settings.py
LOGIN_URL = '/cloud/login/'  # 指定你自定义的登录页面 URL

# celery 队列配置
CELERY_BROKER_URL = 'redis://cloudbox-redis:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_BACKEND = 'redis://cloudbox-redis:6379/0'
CELERYD_CONCURRENCY = 1      # celery worker并发数
CELERYD_MAX_TASKS_PER_CHILD = 1   # 每个worker最大执行任务数

# 每个 worker 使用最大内存，单位是字节 (bytes)
CELERYD_MAX_MEMORY_PER_CHILD = 50000000  # 50 MB

# 控制任务队列的大小和任务执行的最大时间
CELERY_TASK_TIME_LIMIT = 1  # 设置任务的最大执行时间为 1 分钟
CELERY_TASK_ACKS_LATE = True  # 确保任务在成功执行后才会确认




# 添加这个配置避免未来的警告
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True


